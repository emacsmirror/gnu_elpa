#+startup: showall

* Executing commands from indent_xr_for_within_case.m:7:2:

  Case1: (t-utils-xr

  (re-search-forward ":10")                  "C-m"
  (insert "disp('i:');")                     "C-m"
  (insert "disp(i);")                        "C-m"
  (insert "end")
  "C-i"

  (re-search-backward "^fun")
  (t-utils-xr-print-code (point) (point-max))

  )

- Invoking      : (re-search-forward ":10")
  Start point   :  351
  Moved to point:  521
  : 25:22:             for i=1:10
  :                              ^
  No buffer modifications

- Invoking      : "C-m" = newline
  Start point   :  521
  Moved to point:  538
  : 26:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -23,6 +23,7 @@
         switch completions{cIdx}
           case {'foo'}
             for i=1:10
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "disp('i:');")
  Start point   :  538
  Moved to point:  549
  : 26:27:                 disp('i:');
  :                                   ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -23,7 +23,7 @@
         switch completions{cIdx}
           case {'foo'}
             for i=1:10
-                
+                disp('i:');
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  549
  Moved to point:  566
  : 27:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -24,6 +24,7 @@
           case {'foo'}
             for i=1:10
                 disp('i:');
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "disp(i);")
  Start point   :  566
  Moved to point:  574
  : 27:24:                 disp(i);
  :                                ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -24,7 +24,7 @@
           case {'foo'}
             for i=1:10
                 disp('i:');
-                
+                disp(i);
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  574
  Moved to point:  591
  : 28:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -25,6 +25,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "end")
  Start point   :  591
  Moved to point:  594
  : 28:19:                 end
  :                           ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -25,7 +25,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
-                
+                end
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  594
  Moved to point:  590
  : 28:15:             end
  :                       ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -25,7 +25,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
-                end
+            end
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (re-search-backward "^fun")
  Start point   :  590
  Moved to point:  356
  : 21:0: function indent_xr_for_within_case(completions)
  :       ^
  No buffer modifications

- Invoking      : (t-utils-xr-print-code (point) (point-max))
  Start point   :  356
  No point movement
  standard-output:
  #+begin_src matlab-ts
function indent_xr_for_within_case(completions)
    for cIdx = 1 : length(completions)
        switch completions{cIdx}
          case {'foo'}
            for i=1:10
                disp('i:');
                disp(i);
            end
          otherwise
            error('assert - unhandled entryType');
        end
    end
end

  #+end_src
  No buffer modifications
