% -*- matlab-ts -*-

% Here MATLAB indent "SomeLongString" to be 4 from the '(' in "someFunction1("
% This differs from clang-format on C code where it will produce:
%    something.foo = someFunction1(someFunction2(
%        "SomeLongString"));
%
something.foo = someFunction1(someFunction2( ...
                                  "SomeLongString"));

% Here MATLAB indents similar to the prior.
% clang-format C also indents this way:
%    something.foo = someFunction1(someFunction2(
%                                      "SomeLongString"),
%                                  arg2,
%                                  arg3);
%
something.foo = someFunction1(someFunction2( ...
                                  "SomeLongString"), ...
                              arg2, ...
                              arg3);

% Here MATLAB indents similar to the prior.
% This differs from clang-format on C code where it will produce:
%    something.foo = someFunction1(someFunction2(
%        "SomeLongString",
%        arg2,
%        arg3));
something.foo = someFunction1(someFunction2( ...
                                  "SomeLongString", ...
                                  arg2, ...
                                  arg3));

% *** Conclusion ***
%   For consistency, MATLAB is correct. Adding an argument to a function shouldn't cause
%   indent differences. This is likely a miss on clang-format indent rules part.


% --- Test unnecessary spaces ---

something.foo = someFunction1  (someFunction2  ( ...
                                    "SomeLongString"));

something.foo = someFunction1  (someFunction2  ( ...
                                    "SomeLongString"), ...
                                arg2, ...
                                arg3);

something.foo = someFunction1  (someFunction2  ( ...
                                    "SomeLongString", ...
                                    arg2, ...
                                    arg3));

% --- Test namespaces ---

something.foo = fooNamespace.someFunction1(fooNamespace.someFunction2( ...
                                               "SomeLongString"));

something.foo = fooNamespace.someFunction1(fooNamespace.someFunction2( ...
                                               "SomeLongString"), ...
                                           arg2, ...
                                           arg3);

something.foo = fooNamespace.someFunction1(fooNamespace.someFunction2( ...
                                               "SomeLongString", ...
                                               arg2, ...
                                               arg3));

% --- Test namespaces with unnecessary spaces

something.foo = fooNamespace.someFunction1  (fooNamespace.someFunction2  ( ...
                                                 "SomeLongString"));

something.foo = fooNamespace.someFunction1  (fooNamespace.someFunction2  ( ...
                                                 "SomeLongString"), ...
                                             arg2, ...
                                             arg3);

something.foo = fooNamespace.someFunction1  (fooNamespace.someFunction2  ( ...
                                                 "SomeLongString", ...
                                                 arg2, ...
                                                 arg3));
