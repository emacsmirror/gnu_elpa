#+startup: showall

* Executing commands from indent_xr_for_within_case.m:6:2:

  (t-utils-xr

  (re-search-forward ":10")                  "C-m"
  (insert "disp('i:');")                     "C-m"
  (insert "disp(i);")                        "C-m"
  (insert "end")
  "C-i"

  (re-search-backward "^fun")
  (t-utils-xr-print-code (point) (point-max))

  )

- Invoking      : (re-search-forward ":10")
  Start point   :  342
  Moved to point:  512
  : 24:22:             for i=1:10
  :                              ^
  No buffer modifications

- Invoking      : "C-m" = newline
  Start point   :  512
  Moved to point:  529
  : 25:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -22,6 +22,7 @@
         switch completions{cIdx}
           case {'foo'}
             for i=1:10
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "disp('i:');")
  Start point   :  529
  Moved to point:  540
  : 25:27:                 disp('i:');
  :                                   ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -22,7 +22,7 @@
         switch completions{cIdx}
           case {'foo'}
             for i=1:10
-                
+                disp('i:');
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  540
  Moved to point:  557
  : 26:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -23,6 +23,7 @@
           case {'foo'}
             for i=1:10
                 disp('i:');
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "disp(i);")
  Start point   :  557
  Moved to point:  565
  : 26:24:                 disp(i);
  :                                ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -23,7 +23,7 @@
           case {'foo'}
             for i=1:10
                 disp('i:');
-                
+                disp(i);
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  565
  Moved to point:  582
  : 27:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -24,6 +24,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
+                
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (insert "end")
  Start point   :  582
  Moved to point:  585
  : 27:19:                 end
  :                           ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -24,7 +24,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
-                
+                end
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  585
  Moved to point:  581
  : 27:15:             end
  :                       ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -24,7 +24,7 @@
             for i=1:10
                 disp('i:');
                 disp(i);
-                end
+            end
           otherwise
             error('assert - unhandled entryType');
         end
  #+end_src diff

- Invoking      : (re-search-backward "^fun")
  Start point   :  581
  Moved to point:  347
  : 20:0: function indent_xr_for_within_case(completions)
  :       ^
  No buffer modifications

- Invoking      : (t-utils-xr-print-code (point) (point-max))
  Start point   :  347
  No point movement
  standard-output:
  #+begin_src matlab-ts
function indent_xr_for_within_case(completions)
    for cIdx = 1 : length(completions)
        switch completions{cIdx}
          case {'foo'}
            for i=1:10
                disp('i:');
                disp(i);
            end
          otherwise
            error('assert - unhandled entryType');
        end
    end
end

  #+end_src
  No buffer modifications
