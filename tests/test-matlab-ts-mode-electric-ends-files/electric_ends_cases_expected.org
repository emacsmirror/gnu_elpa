#+startup: showall

* Executing commands from electric_ends_cases.m:5:13:

  Case1: (t-utils-xr "C-n" "C-i" (insert "properties") "C-m" (insert "p1"))

- Invoking      : "C-n" = next-line
  Start point   :  131
  Moved to point:  132
  : 6:0: 
  :      ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  132
  Moved to point:  136
  : 6:4:     
  :          ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -3,7 +3,7 @@
 classdef electric_ends_cases
 
     % Case1: (t-utils-xr "C-n" "C-i" (insert "properties") "C-m" (insert "p1"))
-
+    
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
  #+end_src diff

- Invoking      : (insert "properties")
  Start point   :  136
  Moved to point:  146
  : 6:14:     properties
  :                     ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -3,7 +3,7 @@
 classdef electric_ends_cases
 
     % Case1: (t-utils-xr "C-n" "C-i" (insert "properties") "C-m" (insert "p1"))
-    
+    properties
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  146
  Moved to point:  155
  : 7:8:         
  :              ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -4,6 +4,9 @@
 
     % Case1: (t-utils-xr "C-n" "C-i" (insert "properties") "C-m" (insert "p1"))
     properties
+        
+    end
+
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
  #+end_src diff

- Invoking      : (insert "p1")
  Start point   :  155
  Moved to point:  157
  : 7:10:         p1
  :                 ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -4,7 +4,7 @@
 
     % Case1: (t-utils-xr "C-n" "C-i" (insert "properties") "C-m" (insert "p1"))
     properties
-        
+        p1
     end
 
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:10:13:

  Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))

- Invoking      : "C-n" = next-line
  Start point   :  258
  Moved to point:  259
  : 11:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  259
  Moved to point:  263
  : 11:4:     
  :           ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -8,7 +8,7 @@
     end
 
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
-
+    
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
 
     methods
  #+end_src diff

- Invoking      : (insert "methods")
  Start point   :  263
  Moved to point:  270
  : 11:11:     methods
  :                   ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -8,7 +8,7 @@
     end
 
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
-    
+    methods
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
 
     methods
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  270
  Moved to point:  279
  : 12:8:         
  :               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -9,6 +9,9 @@
 
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
     methods
+        
+    end
+
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
 
     methods
  #+end_src diff

- Invoking      : (insert "% methods-comment")
  Start point   :  279
  Moved to point:  296
  : 12:25:         % methods-comment
  :                                 ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -9,7 +9,7 @@
 
     % Case2: (t-utils-xr "C-n" "C-i" (insert "methods") "C-m" (insert "% methods-comment"))
     methods
-        
+        % methods-comment
     end
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:15:13:

  Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))

- Invoking      : "C-n" = next-line
  Start point   :  395
  Moved to point:  396
  : 16:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  396
  Moved to point:  400
  : 16:4:     
  :           ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -13,7 +13,7 @@
     end
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
-
+    
     methods
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
  #+end_src diff

- Invoking      : (insert "events")
  Start point   :  400
  Moved to point:  406
  : 16:10:     events
  :                  ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -13,7 +13,7 @@
     end
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
-    
+    events
     methods
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  406
  Moved to point:  415
  : 17:8:         
  :               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -14,6 +14,9 @@
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
     events
+        
+    end
+
     methods
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
  #+end_src diff

- Invoking      : (insert "% events-comment")
  Start point   :  415
  Moved to point:  431
  : 17:24:         % events-comment
  :                                ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -14,7 +14,7 @@
 
     % Case3: (t-utils-xr "C-n" "C-i" (insert "events") "C-m" (insert "% events-comment"))
     events
-        
+        % events-comment
     end
 
     methods
  #+end_src diff

* Executing commands from electric_ends_cases.m:22:17:

  Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))

- Invoking      : "C-n" = next-line
  Start point   :  548
  Moved to point:  549
  : 23:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  549
  Moved to point:  557
  : 23:8:         
  :               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -20,7 +20,7 @@
     methods
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
-
+        
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
         function foo(a)
         % foo help
  #+end_src diff

- Invoking      : (insert "function bar")
  Start point   :  557
  Moved to point:  569
  : 23:20:         function bar
  :                            ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -20,7 +20,7 @@
     methods
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
-        
+        function bar
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
         function foo(a)
         % foo help
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  569
  Moved to point:  582
  : 24:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -21,6 +21,9 @@
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
         function bar
+            
+        end
+
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
         function foo(a)
         % foo help
  #+end_src diff

- Invoking      : (insert "disp('bar')")
  Start point   :  582
  Moved to point:  593
  : 24:23:             disp('bar')
  :                               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -21,7 +21,7 @@
 
         % Case4: (t-utils-xr "C-n" "C-i" (insert "function bar") "C-m" (insert "disp('bar')"))
         function bar
-            
+            disp('bar')
         end
 
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:27:17:

  Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))

- Invoking      : (re-search-forward "foo help")
  Start point   :  697
  Moved to point:  740
  : 29:18:         % foo help
  :                          ^
  No buffer modifications

- Invoking      : "C-m" = newline
  Start point   :  740
  Moved to point:  749
  : 30:8:         % 
  :               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -27,6 +27,7 @@
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
         function foo(a)
         % foo help
+        % 
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
 
  #+end_src diff

- Invoking      : "C-e" = move-end-of-line
  Start point   :  749
  Moved to point:  751
  : 30:10:         % 
  :                  ^
  No buffer modifications

- Invoking      : (insert "line 2")
  Start point   :  751
  Moved to point:  757
  : 30:16:         % line 2
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -27,7 +27,7 @@
         % Case5: (t-utils-xr (re-search-forward "foo help") "C-m" "C-e" (insert "line 2"))
         function foo(a)
         % foo help
-        % 
+        % line 2
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
 
  #+end_src diff

* Executing commands from electric_ends_cases.m:32:21:

  Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))

- Invoking      : "C-n" = next-line
  Start point   :  844
  Moved to point:  845
  : 33:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  845
  Moved to point:  857
  : 33:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -30,7 +30,7 @@
         % line 2
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
-
+            
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
  #+end_src diff

- Invoking      : (insert "arguments")
  Start point   :  857
  Moved to point:  866
  : 33:21:             arguments
  :                             ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -30,7 +30,7 @@
         % line 2
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
-            
+            arguments
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   :  866
  Moved to point:  883
  : 34:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -31,6 +31,9 @@
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
             arguments
+                
+            end
+
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
  #+end_src diff

- Invoking      : (insert "a")
  Start point   :  883
  Moved to point:  884
  : 34:17:                 a
  :                         ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -31,7 +31,7 @@
 
             % Case6: (t-utils-xr "C-n" "C-i" (insert "arguments") "C-m" (insert "a"))
             arguments
-                
+                a
             end
 
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:37:21:

  Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))

- Invoking      : "C-n" = next-line
  Start point   :  991
  Moved to point:  992
  : 38:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   :  992
  Moved to point: 1004
  : 38:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -35,7 +35,7 @@
             end
 
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
-
+            
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

- Invoking      : (insert "if a")
  Start point   : 1004
  Moved to point: 1008
  : 38:16:             if a
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -35,7 +35,7 @@
             end
 
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
-            
+            if a
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1008
  Moved to point: 1025
  : 39:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -36,6 +36,9 @@
 
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
             if a
+                
+            end
+
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

- Invoking      : (insert "disp('if')")
  Start point   : 1025
  Moved to point: 1035
  : 39:26:                 disp('if')
  :                                  ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -36,7 +36,7 @@
 
             % Case7: (t-utils-xr "C-n" "C-i" (insert "if a") "C-m" (insert "disp('if')"))
             if a
-                
+                disp('if')
             end
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:42:21:

  Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))

- Invoking      : "C-n" = next-line
  Start point   : 1175
  Moved to point: 1176
  : 43:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 1176
  Moved to point: 1188
  : 43:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -40,7 +40,7 @@
             end
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
-
+            
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : (insert "switch a")
  Start point   : 1188
  Moved to point: 1196
  : 43:20:             switch a
  :                            ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -40,7 +40,7 @@
             end
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
-            
+            switch a
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1196
  Moved to point: 1211
  : 44:14:               case 
  :                      ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -41,6 +41,9 @@
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
             switch a
+              case 
+            end
+
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : "C-e" = move-end-of-line
  Start point   : 1211
  Moved to point: 1216
  : 44:19:               case 
  :                           ^
  No buffer modifications

- Invoking      : (insert "1")
  Start point   : 1216
  Moved to point: 1217
  : 44:20:               case 1
  :                            ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -41,7 +41,7 @@
 
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
             switch a
-              case 
+              case 1
             end
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1217
  Moved to point: 1234
  : 45:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -42,6 +42,7 @@
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
             switch a
               case 1
+                
             end
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

- Invoking      : (insert "disp('case 1')")
  Start point   : 1234
  Moved to point: 1248
  : 45:30:                 disp('case 1')
  :                                      ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -42,7 +42,7 @@
             % Case8: (t-utils-xr "C-n" "C-i" (insert "switch a") "C-m" "C-e" (insert "1") "C-m" (insert "disp('case 1')"))
             switch a
               case 1
-                
+                disp('case 1')
             end
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:48:21:

  Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))

- Invoking      : "C-n" = next-line
  Start point   : 1356
  Moved to point: 1357
  : 49:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 1357
  Moved to point: 1369
  : 49:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -46,7 +46,7 @@
             end
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
-
+            
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : (insert "while true")
  Start point   : 1369
  Moved to point: 1379
  : 49:22:             while true
  :                              ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -46,7 +46,7 @@
             end
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
-            
+            while true
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1379
  Moved to point: 1396
  : 50:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -47,6 +47,9 @@
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
             while true
+                
+            end
+
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

- Invoking      : (insert "break")
  Start point   : 1396
  Moved to point: 1401
  : 50:21:                 break
  :                             ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -47,7 +47,7 @@
 
             % Case9: (t-utils-xr "C-n" "C-i" (insert "while true") "C-m" (insert "break"))
             while true
-                
+                break
             end
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:53:22:

  Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))

- Invoking      : "C-n" = next-line
  Start point   : 1515
  Moved to point: 1516
  : 54:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 1516
  Moved to point: 1528
  : 54:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -51,7 +51,7 @@
             end
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
-
+            
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
  #+end_src diff

- Invoking      : (insert "for idx=1:a")
  Start point   : 1528
  Moved to point: 1539
  : 54:23:             for idx=1:a
  :                               ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -51,7 +51,7 @@
             end
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
-            
+            for idx=1:a
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1539
  Moved to point: 1556
  : 55:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -52,6 +52,9 @@
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
             for idx=1:a
+                
+            end
+
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
  #+end_src diff

- Invoking      : (insert "disp(idx)")
  Start point   : 1556
  Moved to point: 1565
  : 55:25:                 disp(idx)
  :                                 ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -52,7 +52,7 @@
 
             % Case10: (t-utils-xr "C-n" "C-i" (insert "for idx=1:a") "C-m" (insert "disp(idx)"))
             for idx=1:a
-                
+                disp(idx)
             end
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:58:22:

  Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))

- Invoking      : "C-n" = next-line
  Start point   : 1682
  Moved to point: 1683
  : 59:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 1683
  Moved to point: 1695
  : 59:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -56,7 +56,7 @@
             end
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
-
+            
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
  #+end_src diff

- Invoking      : (insert "parfor idx=1:a")
  Start point   : 1695
  Moved to point: 1709
  : 59:26:             parfor idx=1:a
  :                                  ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -56,7 +56,7 @@
             end
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
-            
+            parfor idx=1:a
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1709
  Moved to point: 1726
  : 60:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -57,6 +57,9 @@
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
             parfor idx=1:a
+                
+            end
+
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
  #+end_src diff

- Invoking      : (insert "disp(idx)")
  Start point   : 1726
  Moved to point: 1735
  : 60:25:                 disp(idx)
  :                                 ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -57,7 +57,7 @@
 
             % Case11: (t-utils-xr "C-n" "C-i" (insert "parfor idx=1:a") "C-m" (insert "disp(idx)"))
             parfor idx=1:a
-                
+                disp(idx)
             end
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:63:22:

  Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))

- Invoking      : "C-n" = next-line
  Start point   : 1857
  Moved to point: 1858
  : 64:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 1858
  Moved to point: 1870
  : 64:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -61,7 +61,7 @@
             end
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
-
+            
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
 
         end
  #+end_src diff

- Invoking      : (insert "spmd")
  Start point   : 1870
  Moved to point: 1874
  : 64:16:             spmd
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -61,7 +61,7 @@
             end
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
-            
+            spmd
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
 
         end
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 1874
  Moved to point: 1891
  : 65:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -62,6 +62,9 @@
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
             spmd
+                
+            end
+
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
 
         end
  #+end_src diff

- Invoking      : (insert "q = magic(spmdIndex + 2)")
  Start point   : 1891
  Moved to point: 1915
  : 65:40:                 q = magic(spmdIndex + 2)
  :                                                ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -62,7 +62,7 @@
 
             % Case12: (t-utils-xr "C-n" "C-i" (insert "spmd") "C-m" (insert "q = magic(spmdIndex + 2)"))
             spmd
-                
+                q = magic(spmdIndex + 2)
             end
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
  #+end_src diff

* Executing commands from electric_ends_cases.m:68:22:

  Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))

- Invoking      : "C-n" = next-line
  Start point   : 2023
  Moved to point: 2024
  : 69:0: 
  :       ^
  No buffer modifications

- Invoking      : "C-i" = indent-for-tab-command
  Start point   : 2024
  Moved to point: 2036
  : 69:12:             
  :                    ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -66,7 +66,7 @@
             end
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
-
+            
         end
     end
 
  #+end_src diff

- Invoking      : (insert "try")
  Start point   : 2036
  Moved to point: 2039
  : 69:15:             try
  :                       ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -66,7 +66,7 @@
             end
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
-            
+            try
         end
     end
 
  #+end_src diff

- Invoking      : "C-m" = newline
  Start point   : 2039
  Moved to point: 2056
  : 70:16:                 
  :                        ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -67,6 +67,10 @@
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
             try
+                
+            catch me
+            end
+
         end
     end
 
  #+end_src diff

- Invoking      : (insert "disp('try')")
  Start point   : 2056
  Moved to point: 2067
  : 70:27:                 disp('try')
  :                                   ^
  Buffer modified:
  #+begin_src diff
--- start_contents
+++ end_contents
@@ -67,7 +67,7 @@
 
             % Case13: (t-utils-xr "C-n" "C-i" (insert "try") "C-m" (insert "disp('try')"))
             try
-                
+                disp('try')
             catch me
             end
 
  #+end_src diff

* Executing commands from electric_ends_cases.m:79:10:

  Case14: (t-utils-xr (t-utils-xr-print-code (point-min) (point-max)))

- Invoking      : (t-utils-xr-print-code (point-min) (point-max))
  Start point   : 2202
  No point movement
  standard-output:
  #+begin_src matlab-ts
% -*- matlab-ts -*-

classdef electric_ends_cases

    % Case1: (t-utils-xr \"C-n\" \"C-i\" (insert \"properties\") \"C-m\" (insert \"p1\"))
    properties
        p1
    end

    % Case2: (t-utils-xr \"C-n\" \"C-i\" (insert \"methods\") \"C-m\" (insert \"% methods-comment\"))
    methods
        % methods-comment
    end

    % Case3: (t-utils-xr \"C-n\" \"C-i\" (insert \"events\") \"C-m\" (insert \"% events-comment\"))
    events
        % events-comment
    end

    methods

        % Case4: (t-utils-xr \"C-n\" \"C-i\" (insert \"function bar\") \"C-m\" (insert \"disp('bar')\"))
        function bar
            disp('bar')
        end

        % Case5: (t-utils-xr (re-search-forward \"foo help\") \"C-m\" \"C-e\" (insert \"line 2\"))
        function foo(a)
        % foo help
        % line 2

            % Case6: (t-utils-xr \"C-n\" \"C-i\" (insert \"arguments\") \"C-m\" (insert \"a\"))
            arguments
                a
            end

            % Case7: (t-utils-xr \"C-n\" \"C-i\" (insert \"if a\") \"C-m\" (insert \"disp('if')\"))
            if a
                disp('if')
            end

            % Case8: (t-utils-xr \"C-n\" \"C-i\" (insert \"switch a\") \"C-m\" \"C-e\" (insert \"1\") \"C-m\" (insert \"disp('case 1')\"))
            switch a
              case 1
                disp('case 1')
            end

            % Case9: (t-utils-xr \"C-n\" \"C-i\" (insert \"while true\") \"C-m\" (insert \"break\"))
            while true
                break
            end

            % Case10: (t-utils-xr \"C-n\" \"C-i\" (insert \"for idx=1:a\") \"C-m\" (insert \"disp(idx)\"))
            for idx=1:a
                disp(idx)
            end

            % Case11: (t-utils-xr \"C-n\" \"C-i\" (insert \"parfor idx=1:a\") \"C-m\" (insert \"disp(idx)\"))
            parfor idx=1:a
                disp(idx)
            end

            % Case12: (t-utils-xr \"C-n\" \"C-i\" (insert \"spmd\") \"C-m\" (insert \"q = magic(spmdIndex + 2)\"))
            spmd
                q = magic(spmdIndex + 2)
            end

            % Case13: (t-utils-xr \"C-n\" \"C-i\" (insert \"try\") \"C-m\" (insert \"disp('try')\"))
            try
                disp('try')
            catch me
            end

        end
    end

end

% Case14: (t-utils-xr (t-utils-xr-print-code (point-min) (point-max)))

  #+end_src
  No buffer modifications
